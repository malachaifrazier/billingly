!!! Strict
%html
  %head
    %title Billingly Example App
    = csrf_meta_tags

    = stylesheet_link_tag "application", :media => "all"
  
  %body
    .navbar.navbar-fixed-top
      .navbar-inner
        .container
          %ul.nav
            %li
              = link_to "Billingly Example", root_path, class: 'brand'
            %li
              = link_to root_path do
                %i.icon-home
                Home
            %li
              = link_to subscriptions_path do
                %i.icon-shopping-cart
                Subscription

          .nav
            .btn-group
              %a.btn.btn-inverse.dropdown-toggle(href="#" data-toggle="dropdown")
                Actions
                %span.caret
              %ul.dropdown-menu
                %li
                  = link_to "Credit $5 to your account", use_cases_path(:credit_payment),
                      method: :post
                %li
                  = link_to "Create and redeem a promo code",
                      use_cases_path(:create_promo_code), method: :post
          .nav
            .btn-group
              %a.btn.btn-inverse.dropdown-toggle(href="#" data-toggle="dropdown")
                Select Scenario
                %span.caret
              %ul.dropdown-menu
                %li= link_to "New user from scratch",
                  use_cases_path(:create_new), method: :post
                %li= link_to "Regular user who has been around for 3 months",
                  use_cases_path(:create_old_user), method: :post
                %li= link_to "User on trial period",
                  use_cases_path(:create_trial), method: :post
                %li= link_to "User whose trial expired",
                  use_cases_path(:create_expired_trial), method: :post
                %li= link_to "Debtor whose account was deactivated",
                  use_cases_path(:create_deactivated_debtor), method: :post

    .container
      .content
        - if flash[:notice]
          .alert.alert-info
            = flash[:notice]
        .row
          .span12
            = yield
          
        %hr
        .row
          .span9
            %h2 What is Billingly?
            %p  
              Billingly is an open source rails 3 engine that manages
              paid subscriptions to your web application. 
            %p 
              With several extension points, you can consider billing.ly to be a framework
              for building your SaaS application billing semantics.
              
              
            %p
              It's similar to the
              %a(href="http://railskits.com/saas/") SaaS Rails Kit
              but on earlier stages. If you need premium support and can afford it,
              and don't care about using propietary software, you should use their product.
            
            %p
              If you just want a service to manage your subscriptions and payments for you, then
              you may want to check out 
              %a(href="http://chargify.com") Chargify.com
              or
              %a(href="https://stripe.com/") Stripe.com.

            %p  
              You would still need to integrate your app with them and implement some of your own semantics regarding what customers are entitled to do on your site.
              

          .span3
            .well
              %h4 Links
              %ul
                %li
                  %a(href="https://github.com/nubis/billingly") Clone Billingly on Github
                %li
                  %a(href="http://rubydoc.info/github/nubis/billingly/master/file/TUTORIAL.rdoc") Read the Getting Started Guide
                %li
                  %a(href="http://rubydoc.info/github/nubis/billingly/master/frames/file/README.md") Explore the Docs
              
        .row
          .span12
            %h2 What does it do?
            %ul
              %li
                Subscribe customers to your service:
                %ul
                  %li
                    Subscriptions can have an arbitrary length:
                    A year, a month, 90 days ...
                  %li
                    You can request payments upfront or after the billable period is over.

              %li Offer standarized subscription Plans for self-service sign ups.

              %li Offer special deals on a per-customer basis.

              %li Invoice your customers automatically and send receipts once they pay.

              %li Notify customers about due dates.

              %li Restrict access to debtors, and let them back in once they pay their debt.

              %li 
                Let customers upgrade or downgrade to another plan.
                Prorating and reimbursing in case there were any upfront payments.

              %li Offer a trial period before you require people to become paying customers.
              
              %li Charge for setup fees on the first invoice.
              
              %li Give a signup-discount for a customer's first invoice.
              
              %li Offer redeemable code that when redeemed enable customers to signup for special pricing and/or credit bonus money in their account.

        .row
          .span8
            %h2 What doesn't it do?
            %p 
              %strong Billingly does not receive payments directly
              (from Paypal, or Worldpay for example).
            %p
              However, you can use
              %a(href="http://activemerchant.org") ActiveMerchant
              for handling payment notifications
              from third party services, and easily hookup Billingly to credit the payment
              into your customer's account. Billingly will take care of all the rest.

      %hr
      %footer
        %p  
          MIT License. Copyright 2012 Nubis
          %a(href="mailto:y%6f@%6eubi%73%2eim") &#121;o@n&#117;b&#105;s.im

    = javascript_include_tag "application"
